{"version":3,"sources":["index.js"],"names":["require","h","Component","classNames","getFileTypeIcon","ignoreEvent","FilePreview","FileCard","props","updateMeta","newVal","name","setState","formState","state","handleSave","e","preventDefault","fileID","fileCardFor","saveFileCard","handleCancel","toggleFileCard","saveOnEnter","ev","keyCode","stopPropagation","file","files","id","renderMetaFields","metaFields","getMetaFields","fieldCSSClasses","text","map","field","required","requiredMetaFields","includes","render","undefined","value","onChange","type","placeholder","target","storedMetaData","forEach","meta","showEditButton","canEditFile","className","i18nArray","i18n","backgroundColor","color","openFileEditor","module","exports"],"mappings":"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","sourcesContent":["const { h, Component } = require('preact')\nconst classNames = require('classnames')\nconst getFileTypeIcon = require('../../utils/getFileTypeIcon')\nconst ignoreEvent = require('../../utils/ignoreEvent.js')\nconst FilePreview = require('../FilePreview')\n\nclass FileCard extends Component {\n  constructor (props) {\n    super(props)\n\n    const file = this.props.files[this.props.fileCardFor]\n    const metaFields = this.getMetaFields() || []\n\n    const storedMetaData = {}\n    metaFields.forEach((field) => {\n      storedMetaData[field.id] = file.meta[field.id] || ''\n    })\n\n    this.state = {\n      formState: storedMetaData,\n    }\n  }\n\n  updateMeta = (newVal, name) => {\n    this.setState({\n      formState: {\n        ...this.state.formState,\n        [name]: newVal,\n      },\n    })\n  }\n\n  handleSave = (e) => {\n    e.preventDefault()\n    const fileID = this.props.fileCardFor\n    this.props.saveFileCard(this.state.formState, fileID)\n  }\n\n  handleCancel = () => {\n    this.props.toggleFileCard(false)\n  }\n\n  saveOnEnter = (ev) => {\n    if (ev.keyCode === 13) {\n      ev.stopPropagation()\n      ev.preventDefault()\n      const file = this.props.files[this.props.fileCardFor]\n      this.props.saveFileCard(this.state.formState, file.id)\n    }\n  }\n\n  renderMetaFields = () => {\n    const metaFields = this.getMetaFields() || []\n    const fieldCSSClasses = {\n      text: 'uppy-u-reset uppy-c-textInput uppy-Dashboard-FileCard-input',\n    }\n\n    return metaFields.map((field) => {\n      const id = `uppy-Dashboard-FileCard-input-${field.id}`\n      const required = this.props.requiredMetaFields.includes(field.id)\n      return (\n        <fieldset key={field.id} className=\"uppy-Dashboard-FileCard-fieldset\">\n          <label className=\"uppy-Dashboard-FileCard-label\" htmlFor={id}>{field.name}</label>\n          {field.render !== undefined\n            ? field.render({\n              value: this.state.formState[field.id],\n              onChange: (newVal) => this.updateMeta(newVal, field.id),\n              fieldCSSClasses,\n              required,\n            }, h)\n            : (\n              <input\n                className={fieldCSSClasses.text}\n                id={id}\n                type={field.type || 'text'}\n                required={required}\n                value={this.state.formState[field.id]}\n                placeholder={field.placeholder}\n                onKeyUp={this.saveOnEnter}\n                onKeyDown={this.saveOnEnter}\n                onKeyPress={this.saveOnEnter}\n                onInput={ev => this.updateMeta(ev.target.value, field.id)}\n                data-uppy-super-focusable\n              />\n            )}\n        </fieldset>\n      )\n    })\n  }\n\n  getMetaFields () {\n    return typeof this.props.metaFields === 'function'\n      ? this.props.metaFields(this.props.files[this.props.fileCardFor])\n      : this.props.metaFields\n  }\n\n  render () {\n    const file = this.props.files[this.props.fileCardFor]\n    const showEditButton = this.props.canEditFile(file)\n\n    return (\n      <div\n        className={classNames('uppy-Dashboard-FileCard', this.props.className)}\n        data-uppy-panelType=\"FileCard\"\n        onDragOver={ignoreEvent}\n        onDragLeave={ignoreEvent}\n        onDrop={ignoreEvent}\n        onPaste={ignoreEvent}\n      >\n        <div className=\"uppy-DashboardContent-bar\">\n          <div className=\"uppy-DashboardContent-title\" role=\"heading\" aria-level=\"1\">\n            {this.props.i18nArray('editing', {\n              file: <span className=\"uppy-DashboardContent-titleFile\">{file.meta ? file.meta.name : file.name}</span>,\n            })}\n          </div>\n          <button\n            className=\"uppy-DashboardContent-back\"\n            type=\"button\"\n            title={this.props.i18n('finishEditingFile')}\n            onClick={this.handleCancel}\n          >\n            {this.props.i18n('cancel')}\n          </button>\n        </div>\n\n        <div className=\"uppy-Dashboard-FileCard-inner\">\n          <div className=\"uppy-Dashboard-FileCard-preview\" style={{ backgroundColor: getFileTypeIcon(file.type).color }}>\n            <FilePreview file={file} />\n            {showEditButton\n              && (\n              <button\n                type=\"button\"\n                className=\"uppy-u-reset uppy-c-btn uppy-Dashboard-FileCard-edit\"\n                onClick={() => this.props.openFileEditor(file)}\n              >\n                {this.props.i18n('editFile')}\n              </button>\n              )}\n          </div>\n\n          <div className=\"uppy-Dashboard-FileCard-info\">\n            {this.renderMetaFields()}\n          </div>\n\n          <div className=\"uppy-Dashboard-FileCard-actions\">\n            <button\n              className=\"uppy-u-reset uppy-c-btn uppy-c-btn-primary uppy-Dashboard-FileCard-actionsBtn\"\n              // If `form` attribute is not in Preact 8, we can’t trigger the form validation.\n              // We use a classic button with a onClick event handler.\n              type=\"button\"\n              onClick={this.handleSave}\n            >\n              {this.props.i18n('saveChanges')}\n            </button>\n            <button\n              className=\"uppy-u-reset uppy-c-btn uppy-c-btn-link uppy-Dashboard-FileCard-actionsBtn\"\n              type=\"button\"\n              onClick={this.handleCancel}\n            >\n              {this.props.i18n('cancel')}\n            </button>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nmodule.exports = FileCard\n"]}