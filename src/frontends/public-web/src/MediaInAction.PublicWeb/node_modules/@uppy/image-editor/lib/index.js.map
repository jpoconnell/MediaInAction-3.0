{"version":3,"sources":["index.js"],"names":["require","Plugin","Editor","Translator","h","module","exports","uppy","opts","save","saveBlobCallback","blob","getPluginState","currentImage","setFileState","id","data","size","preview","updatedFile","getFile","emit","setPluginState","cropper","getCroppedCanvas","toBlob","type","quality","storeCropperInstance","selectFile","file","title","defaultLocale","strings","revert","rotate","zoomIn","zoomOut","flipHorizontal","aspectRatioSquare","aspectRatioLandscape","aspectRatioPortrait","defaultCropperOptions","viewMode","background","autoCropArea","responsive","defaultActions","granularRotate","flip","cropSquare","cropWidescreen","cropWidescreenVertical","defaultOptions","actions","cropperOptions","i18nInit","setOptions","newOpts","translator","locale","i18n","translate","bind","canEditFile","isRemote","fileTypeSpecific","split","test","install","target","mount","uninstall","unmount","render","VERSION"],"mappings":"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","sourcesContent":["const { Plugin } = require('@uppy/core')\nconst Editor = require('./Editor')\nconst Translator = require('@uppy/utils/lib/Translator')\nconst { h } = require('preact')\n\nmodule.exports = class ImageEditor extends Plugin {\n  static VERSION = require('../package.json').version\n\n  constructor (uppy, opts) {\n    super(uppy, opts)\n    this.id = this.opts.id || 'ImageEditor'\n    this.title = 'Image Editor'\n    this.type = 'editor'\n\n    this.defaultLocale = {\n      strings: {\n        revert: 'Revert',\n        rotate: 'Rotate',\n        zoomIn: 'Zoom in',\n        zoomOut: 'Zoom out',\n        flipHorizontal: 'Flip horizontal',\n        aspectRatioSquare: 'Crop square',\n        aspectRatioLandscape: 'Crop landscape (16:9)',\n        aspectRatioPortrait: 'Crop portrait (9:16)',\n      },\n    }\n\n    const defaultCropperOptions = {\n      viewMode: 1,\n      background: false,\n      autoCropArea: 1,\n      responsive: true,\n    }\n\n    const defaultActions = {\n      revert: true,\n      rotate: true,\n      granularRotate: true,\n      flip: true,\n      zoomIn: true,\n      zoomOut: true,\n      cropSquare: true,\n      cropWidescreen: true,\n      cropWidescreenVertical: true,\n    }\n\n    const defaultOptions = {\n      quality: 0.8,\n    }\n\n    this.opts = {\n      ...defaultOptions,\n      ...opts,\n      actions: {\n        ...defaultActions,\n        ...opts.actions,\n      },\n      cropperOptions: {\n        ...defaultCropperOptions,\n        ...opts.cropperOptions,\n      },\n    }\n\n    this.i18nInit()\n  }\n\n  setOptions (newOpts) {\n    super.setOptions(newOpts)\n    this.i18nInit()\n  }\n\n  i18nInit () {\n    this.translator = new Translator([this.defaultLocale, this.uppy.locale, this.opts.locale])\n    this.i18n = this.translator.translate.bind(this.translator)\n    // this.i18nArray = this.translator.translateArray.bind(this.translator)\n    this.setPluginState() // so that UI re-renders and we see the updated locale\n  }\n\n  canEditFile (file) {\n    if (!file.type || file.isRemote) {\n      return false\n    }\n\n    const fileTypeSpecific = file.type.split('/')[1]\n\n    if (/^(jpe?g|gif|png|bmp|webp)$/.test(fileTypeSpecific)) {\n      return true\n    }\n\n    return false\n  }\n\n  save = () => {\n    const saveBlobCallback = (blob) => {\n      const { currentImage } = this.getPluginState()\n\n      this.uppy.setFileState(currentImage.id, {\n        data: blob,\n        size: blob.size,\n        preview: null,\n      })\n\n      const updatedFile = this.uppy.getFile(currentImage.id)\n      this.uppy.emit('thumbnail:request', updatedFile)\n      this.setPluginState({\n        currentImage: updatedFile,\n      })\n      this.uppy.emit('file-editor:complete', updatedFile)\n    }\n\n    const { currentImage } = this.getPluginState()\n\n    this.cropper.getCroppedCanvas().toBlob(\n      saveBlobCallback,\n      currentImage.type,\n      this.opts.quality\n    )\n  }\n\n  storeCropperInstance = (cropper) => {\n    this.cropper = cropper\n  }\n\n  selectFile = (file) => {\n    this.uppy.emit('file-editor:start', file)\n    this.setPluginState({\n      currentImage: file,\n    })\n  }\n\n  install () {\n    this.setPluginState({\n      currentImage: null,\n    })\n\n    const target = this.opts.target\n    if (target) {\n      this.mount(target, this)\n    }\n  }\n\n  uninstall () {\n    this.unmount()\n  }\n\n  render () {\n    const { currentImage } = this.getPluginState()\n    if (currentImage === null || currentImage.isRemote) {\n      return\n    }\n\n    return (\n      <Editor\n        currentImage={currentImage}\n        storeCropperInstance={this.storeCropperInstance}\n        save={this.save}\n        opts={this.opts}\n        i18n={this.i18n}\n      />\n    )\n  }\n}\n"]}